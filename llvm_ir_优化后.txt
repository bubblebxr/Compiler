declare i32 @getint()
declare i32 @getchar()
declare void @putint(i32)
declare void @putch(i32)
declare void @putstr(i8*)
@N=dso_local constant i32 10
@a=dso_local global [10 x i32][i32 0,i32 1,i32 2,i32 3,i32 4,i32 5,i32 6,i32 7,i32 8,i32 9]
@.str.0=dso_local constant [3 x i8][i8 44,i8 32,i8 0]
@.str.1=dso_local constant [2 x i8][i8 10,i8 0]
@.str.2=dso_local constant [3 x i8][i8 44,i8 32,i8 0]
@.str.3=dso_local constant [3 x i8][i8 44,i8 32,i8 0]
@.str.4=dso_local constant [2 x i8][i8 10,i8 0]
define dso_local i32 @fib(i32 %0){
    %2 = alloca i32
    store i32 %0,i32* %2
b0:
    %3 = load i32,i32* %2
    %4 = icmp eq i32 %3,1
    %5 = zext i1 %4 to i32
    %6 = icmp ne i32 0,%5
    br i1 %6,label %b1,label %b2
b1:
    ret i32 1
b2:
b3:
    %7 = load i32,i32* %2
    %8 = icmp eq i32 %7,2
    %9 = zext i1 %8 to i32
    %10 = icmp ne i32 0,%9
    br i1 %10,label %b4,label %b5
b4:
    ret i32 2
b5:
    %11 = load i32,i32* %2
    %12 = sub i32 %11,1
    %13 = call i32 @fib(i32 %12)
    %14 = load i32,i32* %2
    %15 = sub i32 %14,2
    %16 = call i32 @fib(i32 %15)
    %17 = add i32 %13,%16
    ret i32 %17
}

define dso_local i32 @main(){
    %1 = alloca i32
    store i32 2,i32* %1
    %2 = alloca i32
    store i32 5,i32* %2
    %3 = alloca i32
    store i32 1,i32* %3
    %4 = alloca i32
    store i32 2,i32* %4
    %5 = call i32 @getint()
    store i32 %5,i32* %1
    %6 = call i32 @getint()
    store i32 %6,i32* %2
    %7 = load i32,i32* %1
    %8 = load i32,i32* %2
    %9 = mul i32 %7,%8
    %10 = sub i32 0,%9
    %11 = call i32 @fib(i32 4)
    %12 = mul i32 %10,%11
    %13 = add i32 %12,0
    %14 = getelementptr inbounds [10 x i32],[10 x i32]* @a,i32 0,i32 1
    %15 = load i32,i32* %14
    %16 = mul i32 %15,1
    %17 = add i32 %13,%16
    %18 = sdiv i32 1,2
    %19 = sub i32 %17,%18
    %20 = sdiv i32 %19,5
    store i32 %20,i32* %1
    %21 = mul i32 7,5923
    %22 = srem i32 %21,56
    %23 = mul i32 %22,57
    %24 = call i32 @fib(i32 5)
    %25 = add i32 %24,2
    %26 = call i32 @fib(i32 %25)
    %27 = sub i32 %23,%26
    %28 = load i32,i32* %3
    %29 = load i32,i32* %4
    %30 = add i32 %28,%29
    %31 = sdiv i32 89,2
    %32 = mul i32 %31,36
    %33 = sub i32 %32,53
    %34 = sdiv i32 %33,1
    %35 = mul i32 %34,6
    %36 = sub i32 %30,%35
    %37 = mul i32 45,56
    %38 = sdiv i32 %37,85
    %39 = sub i32 %38,56
    %40 = mul i32 35,56
    %41 = sdiv i32 %40,4
    %42 = add i32 %39,%41
    %43 = sub i32 %42,9
    %44 = mul i32 2,%43
    %45 = sub i32 %36,%44
    %46 = add i32 %27,%45
    store i32 %46,i32* %2
    %47 = alloca i32
    %48 = add i32 0,6
    %49 = sub i32 0,%48
    %50 = add i32 0,%49
    store i32 %50,i32* %47
    %51 = getelementptr inbounds [10 x i32],[10 x i32]* @a,i32 0,i32 0
    %52 = load i32,i32* %51
    %53 = load i32,i32* %1
    %54 = load i32,i32* %1
    %55 = mul i32 %53,%54
    %56 = add i32 %52,%55
    %57 = getelementptr inbounds [10 x i32],[10 x i32]* @a,i32 0,i32 0
    store i32 %56,i32* %57
    %58 = getelementptr inbounds [10 x i32],[10 x i32]* @a,i32 0,i32 1
    %59 = load i32,i32* %58
    %60 = load i32,i32* %1
    %61 = load i32,i32* %1
    %62 = mul i32 %60,%61
    %63 = add i32 %59,%62
    %64 = getelementptr inbounds [10 x i32],[10 x i32]* @a,i32 0,i32 1
    store i32 %63,i32* %64
    %65 = getelementptr inbounds [10 x i32],[10 x i32]* @a,i32 0,i32 2
    %66 = load i32,i32* %65
    %67 = load i32,i32* %1
    %68 = load i32,i32* %1
    %69 = mul i32 %67,%68
    %70 = add i32 %66,%69
    %71 = getelementptr inbounds [10 x i32],[10 x i32]* @a,i32 0,i32 2
    store i32 %70,i32* %71
    %72 = getelementptr inbounds [10 x i32],[10 x i32]* @a,i32 0,i32 3
    %73 = load i32,i32* %72
    %74 = load i32,i32* %1
    %75 = load i32,i32* %1
    %76 = mul i32 %74,%75
    %77 = add i32 %73,%76
    %78 = getelementptr inbounds [10 x i32],[10 x i32]* @a,i32 0,i32 3
    store i32 %77,i32* %78
    %79 = getelementptr inbounds [10 x i32],[10 x i32]* @a,i32 0,i32 4
    %80 = load i32,i32* %79
    %81 = load i32,i32* %1
    %82 = load i32,i32* %1
    %83 = mul i32 %81,%82
    %84 = add i32 %80,%83
    %85 = getelementptr inbounds [10 x i32],[10 x i32]* @a,i32 0,i32 4
    store i32 %84,i32* %85
    %86 = getelementptr inbounds [10 x i32],[10 x i32]* @a,i32 0,i32 5
    %87 = load i32,i32* %86
    %88 = load i32,i32* %1
    %89 = load i32,i32* %1
    %90 = mul i32 %88,%89
    %91 = add i32 %87,%90
    %92 = getelementptr inbounds [10 x i32],[10 x i32]* @a,i32 0,i32 5
    store i32 %91,i32* %92
    %93 = getelementptr inbounds [10 x i32],[10 x i32]* @a,i32 0,i32 6
    %94 = load i32,i32* %93
    %95 = load i32,i32* %1
    %96 = load i32,i32* %1
    %97 = mul i32 %95,%96
    %98 = add i32 %94,%97
    %99 = getelementptr inbounds [10 x i32],[10 x i32]* @a,i32 0,i32 6
    store i32 %98,i32* %99
    %100 = getelementptr inbounds [10 x i32],[10 x i32]* @a,i32 0,i32 7
    %101 = load i32,i32* %100
    %102 = load i32,i32* %1
    %103 = load i32,i32* %1
    %104 = mul i32 %102,%103
    %105 = add i32 %101,%104
    %106 = getelementptr inbounds [10 x i32],[10 x i32]* @a,i32 0,i32 7
    store i32 %105,i32* %106
    %107 = getelementptr inbounds [10 x i32],[10 x i32]* @a,i32 0,i32 8
    %108 = load i32,i32* %107
    %109 = load i32,i32* %1
    %110 = load i32,i32* %1
    %111 = mul i32 %109,%110
    %112 = add i32 %108,%111
    %113 = getelementptr inbounds [10 x i32],[10 x i32]* @a,i32 0,i32 8
    store i32 %112,i32* %113
    %114 = getelementptr inbounds [10 x i32],[10 x i32]* @a,i32 0,i32 9
    %115 = load i32,i32* %114
    %116 = load i32,i32* %1
    %117 = load i32,i32* %1
    %118 = mul i32 %116,%117
    %119 = add i32 %115,%118
    %120 = getelementptr inbounds [10 x i32],[10 x i32]* @a,i32 0,i32 9
    store i32 %119,i32* %120
    store i32 0,i32* %1
b6:
    %121 = load i32,i32* %1
    %122 = icmp slt i32 %121,10
    %123 = zext i1 %122 to i32
    %124 = icmp ne i32 0,%123
    br i1 %124,label %b7,label %b8
b7:
    %125 = load i32,i32* %1
    %126 = getelementptr inbounds [10 x i32],[10 x i32]* @a,i32 0,i32 %125
    %127 = load i32,i32* %126
    call void @putint(i32 %127)
    %128 = getelementptr inbounds [3 x i8],[3 x i8]* @.str.0,i32 0,i32 0
    call void @putstr(i8* %128)
    %129 = load i32,i32* %1
    %130 = add i32 %129,1
    store i32 %130,i32* %1
    br label %b6
b8:
    %131 = getelementptr inbounds [2 x i8],[2 x i8]* @.str.1,i32 0,i32 0
    call void @putstr(i8* %131)
    %132 = load i32,i32* %1
    call void @putint(i32 %132)
    %133 = getelementptr inbounds [3 x i8],[3 x i8]* @.str.2,i32 0,i32 0
    call void @putstr(i8* %133)
    %134 = load i32,i32* %2
    call void @putint(i32 %134)
    %135 = getelementptr inbounds [3 x i8],[3 x i8]* @.str.3,i32 0,i32 0
    call void @putstr(i8* %135)
    %136 = load i32,i32* %47
    call void @putint(i32 %136)
    %137 = getelementptr inbounds [2 x i8],[2 x i8]* @.str.4,i32 0,i32 0
    call void @putstr(i8* %137)
    ret i32 0
}

