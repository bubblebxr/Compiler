declare i32 @getint()
declare i32 @getchar()
declare void @putint(i32)
declare void @putch(i32)
declare void @putstr(i8*)
@N=dso_local constant i32 10
@a=dso_local global [10 x i32][i32 0,i32 1,i32 2,i32 3,i32 4,i32 5,i32 6,i32 7,i32 8,i32 9]
@.str.0=dso_local constant [3 x i8][i8 44,i8 32,i8 0]
@.str.1=dso_local constant [2 x i8][i8 10,i8 0]
@.str.2=dso_local constant [3 x i8][i8 44,i8 32,i8 0]
@.str.3=dso_local constant [3 x i8][i8 44,i8 32,i8 0]
@.str.4=dso_local constant [2 x i8][i8 10,i8 0]
define dso_local i32 @fib(i32 %0){
    %2 = alloca i32
    store i32 %0,i32* %2
    br label %b0
b0:
    %3 = load i32,i32* %2
    %4 = icmp eq i32 %3,1
    %5 = zext i1 %4 to i32
    %6 = icmp ne i32 0,%5
    br i1 %6,label %b1,label %b2
b1:
    ret i32 1
b2:
    br label %b3
b3:
    %7 = load i32,i32* %2
    %8 = icmp eq i32 %7,2
    %9 = zext i1 %8 to i32
    %10 = icmp ne i32 0,%9
    br i1 %10,label %b4,label %b5
b4:
    ret i32 2
b5:
    %11 = load i32,i32* %2
    %12 = sub i32 %11,1
    %13 = call i32 @fib(i32 %12)
    %14 = load i32,i32* %2
    %15 = sub i32 %14,2
    %16 = call i32 @fib(i32 %15)
    %17 = add i32 %13,%16
    ret i32 %17
}

define dso_local i32 @main(){
    %1 = alloca i32
    store i32 2,i32* %1
    %2 = alloca i32
    store i32 5,i32* %2
    %3 = alloca i32
    store i32 1,i32* %3
    %4 = alloca i32
    store i32 2,i32* %4
    %5 = call i32 @getint()
    store i32 %5,i32* %1
    %6 = call i32 @getint()
    store i32 %6,i32* %2
    %7 = load i32,i32* %1
    %8 = load i32,i32* %2
    %9 = mul i32 %7,%8
    %10 = sub i32 0,%9
    %11 = call i32 @fib(i32 4)
    %12 = mul i32 %10,%11
    %13 = add i32 %12,0
    %14 = getelementptr inbounds [10 x i32],[10 x i32]* @a,i32 0,i32 1
    %15 = load i32,i32* %14
    %16 = mul i32 %15,1
    %17 = add i32 %13,%16
    %18 = sub i32 %17,0
    %19 = sdiv i32 %18,5
    store i32 %19,i32* %1
    %20 = call i32 @fib(i32 5)
    %21 = add i32 %20,2
    %22 = call i32 @fib(i32 %21)
    %23 = sub i32 1197,%22
    %24 = load i32,i32* %3
    %25 = load i32,i32* %4
    %26 = add i32 %24,%25
    %27 = sub i32 %26,9186
    %28 = sub i32 %27,908
    %29 = add i32 %23,%28
    store i32 %29,i32* %2
    %30 = alloca i32
    store i32 -6,i32* %30
    %31 = getelementptr inbounds [10 x i32],[10 x i32]* @a,i32 0,i32 0
    %32 = load i32,i32* %31
    %33 = load i32,i32* %1
    %34 = load i32,i32* %1
    %35 = mul i32 %33,%34
    %36 = add i32 %32,%35
    %37 = getelementptr inbounds [10 x i32],[10 x i32]* @a,i32 0,i32 0
    store i32 %36,i32* %37
    %38 = getelementptr inbounds [10 x i32],[10 x i32]* @a,i32 0,i32 1
    %39 = load i32,i32* %38
    %40 = load i32,i32* %1
    %41 = load i32,i32* %1
    %42 = mul i32 %40,%41
    %43 = add i32 %39,%42
    %44 = getelementptr inbounds [10 x i32],[10 x i32]* @a,i32 0,i32 1
    store i32 %43,i32* %44
    %45 = getelementptr inbounds [10 x i32],[10 x i32]* @a,i32 0,i32 2
    %46 = load i32,i32* %45
    %47 = load i32,i32* %1
    %48 = load i32,i32* %1
    %49 = mul i32 %47,%48
    %50 = add i32 %46,%49
    %51 = getelementptr inbounds [10 x i32],[10 x i32]* @a,i32 0,i32 2
    store i32 %50,i32* %51
    %52 = getelementptr inbounds [10 x i32],[10 x i32]* @a,i32 0,i32 3
    %53 = load i32,i32* %52
    %54 = load i32,i32* %1
    %55 = load i32,i32* %1
    %56 = mul i32 %54,%55
    %57 = add i32 %53,%56
    %58 = getelementptr inbounds [10 x i32],[10 x i32]* @a,i32 0,i32 3
    store i32 %57,i32* %58
    %59 = getelementptr inbounds [10 x i32],[10 x i32]* @a,i32 0,i32 4
    %60 = load i32,i32* %59
    %61 = load i32,i32* %1
    %62 = load i32,i32* %1
    %63 = mul i32 %61,%62
    %64 = add i32 %60,%63
    %65 = getelementptr inbounds [10 x i32],[10 x i32]* @a,i32 0,i32 4
    store i32 %64,i32* %65
    %66 = getelementptr inbounds [10 x i32],[10 x i32]* @a,i32 0,i32 5
    %67 = load i32,i32* %66
    %68 = load i32,i32* %1
    %69 = load i32,i32* %1
    %70 = mul i32 %68,%69
    %71 = add i32 %67,%70
    %72 = getelementptr inbounds [10 x i32],[10 x i32]* @a,i32 0,i32 5
    store i32 %71,i32* %72
    %73 = getelementptr inbounds [10 x i32],[10 x i32]* @a,i32 0,i32 6
    %74 = load i32,i32* %73
    %75 = load i32,i32* %1
    %76 = load i32,i32* %1
    %77 = mul i32 %75,%76
    %78 = add i32 %74,%77
    %79 = getelementptr inbounds [10 x i32],[10 x i32]* @a,i32 0,i32 6
    store i32 %78,i32* %79
    %80 = getelementptr inbounds [10 x i32],[10 x i32]* @a,i32 0,i32 7
    %81 = load i32,i32* %80
    %82 = load i32,i32* %1
    %83 = load i32,i32* %1
    %84 = mul i32 %82,%83
    %85 = add i32 %81,%84
    %86 = getelementptr inbounds [10 x i32],[10 x i32]* @a,i32 0,i32 7
    store i32 %85,i32* %86
    %87 = getelementptr inbounds [10 x i32],[10 x i32]* @a,i32 0,i32 8
    %88 = load i32,i32* %87
    %89 = load i32,i32* %1
    %90 = load i32,i32* %1
    %91 = mul i32 %89,%90
    %92 = add i32 %88,%91
    %93 = getelementptr inbounds [10 x i32],[10 x i32]* @a,i32 0,i32 8
    store i32 %92,i32* %93
    %94 = getelementptr inbounds [10 x i32],[10 x i32]* @a,i32 0,i32 9
    %95 = load i32,i32* %94
    %96 = load i32,i32* %1
    %97 = load i32,i32* %1
    %98 = mul i32 %96,%97
    %99 = add i32 %95,%98
    %100 = getelementptr inbounds [10 x i32],[10 x i32]* @a,i32 0,i32 9
    store i32 %99,i32* %100
    store i32 0,i32* %1
    br label %b6
b6:
    %101 = load i32,i32* %1
    %102 = icmp slt i32 %101,10
    %103 = zext i1 %102 to i32
    %104 = icmp ne i32 0,%103
    br i1 %104,label %b7,label %b8
b7:
    %105 = load i32,i32* %1
    %106 = getelementptr inbounds [10 x i32],[10 x i32]* @a,i32 0,i32 %105
    %107 = load i32,i32* %106
    call void @putint(i32 %107)
    %108 = getelementptr inbounds [3 x i8],[3 x i8]* @.str.0,i32 0,i32 0
    call void @putstr(i8* %108)
    %109 = load i32,i32* %1
    %110 = add i32 %109,1
    store i32 %110,i32* %1
    br label %b6
b8:
    %111 = getelementptr inbounds [2 x i8],[2 x i8]* @.str.1,i32 0,i32 0
    call void @putstr(i8* %111)
    %112 = load i32,i32* %1
    call void @putint(i32 %112)
    %113 = getelementptr inbounds [3 x i8],[3 x i8]* @.str.2,i32 0,i32 0
    call void @putstr(i8* %113)
    %114 = load i32,i32* %2
    call void @putint(i32 %114)
    %115 = getelementptr inbounds [3 x i8],[3 x i8]* @.str.3,i32 0,i32 0
    call void @putstr(i8* %115)
    %116 = load i32,i32* %30
    call void @putint(i32 %116)
    %117 = getelementptr inbounds [2 x i8],[2 x i8]* @.str.4,i32 0,i32 0
    call void @putstr(i8* %117)
    ret i32 0
}

